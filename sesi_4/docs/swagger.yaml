definitions:
  helpers.ApiError:
    properties:
      field:
        type: string
      message:
        type: string
      tag:
        type: string
      value:
        type: string
    type: object
  helpers.JSONResult200:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  helpers.JSONResult400:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  helpers.JSONResult401:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  helpers.JSONResult404:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  helpers.JSONResult422:
    properties:
      code:
        type: integer
      errors:
        items:
          $ref: '#/definitions/helpers.ApiError'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  socialmedia.CreateSocialMediaInput:
    properties:
      name:
        example: ""
        type: string
      social_media_url:
        example: ""
        type: string
    required:
    - name
    - social_media_url
    type: object
  user.LoginInput:
    properties:
      email:
        example: ""
        type: string
      password:
        example: ""
        type: string
    required:
    - email
    - password
    type: object
  user.RegisterUserInput:
    properties:
      age:
        example: 0
        type: integer
      email:
        example: ""
        type: string
      password:
        example: ""
        minLength: 6
        type: string
      username:
        example: ""
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: get token for login
      parameters:
      - description: Auth Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.JSONResult200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.JSONResult400'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.JSONResult422'
      summary: user login
      tags:
      - authentication
  /api/register:
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: Auth Register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/user.RegisterUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.JSONResult200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.JSONResult400'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.JSONResult422'
      summary: user register
      tags:
      - authentication
  /api/social_media:
    get:
      consumes:
      - application/json
      description: get all socialmedia by user id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.JSONResult200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.JSONResult400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.JSONResult401'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.JSONResult422'
      security:
      - Bearer: []
      summary: get all socialmedia by user id
      tags:
      - socialmedia
    post:
      consumes:
      - application/json
      description: create socialmedia by user id
      parameters:
      - description: Create Social Media
        in: body
        name: createSocialMedia
        required: true
        schema:
          $ref: '#/definitions/socialmedia.CreateSocialMediaInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.JSONResult200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.JSONResult400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.JSONResult401'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.JSONResult422'
      security:
      - Bearer: []
      summary: create socialmedia by user id
      tags:
      - socialmedia
  /api/social_media/{socialMediaID}:
    delete:
      consumes:
      - application/json
      description: delete socialmedia by user id
      parameters:
      - description: socialMediaID
        in: path
        name: socialMediaID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.JSONResult200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.JSONResult400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.JSONResult404'
      security:
      - Bearer: []
      summary: delete socialmedia by user id
      tags:
      - socialmedia
    get:
      consumes:
      - application/json
      description: get one socialmedia by user id
      parameters:
      - description: socialMediaID
        in: path
        name: socialMediaID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.JSONResult200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.JSONResult400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.JSONResult404'
      security:
      - Bearer: []
      summary: get one socialmedia by user id
      tags:
      - socialmedia
    put:
      consumes:
      - application/json
      description: update socialmedia by user id
      parameters:
      - description: socialMediaID
        in: path
        name: socialMediaID
        required: true
        type: integer
      - description: Update Social Media
        in: body
        name: updateSocialMedia
        required: true
        schema:
          $ref: '#/definitions/socialmedia.CreateSocialMediaInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.JSONResult200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.JSONResult400'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.JSONResult401'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.JSONResult404'
      security:
      - Bearer: []
      summary: update socialmedia by user id
      tags:
      - socialmedia
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
